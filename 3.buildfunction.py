# len() ফাংশন একটি স্ট্রিং বা অন্য কোনো iterable এর দৈর্ঘ্য পরিমাপ করে
name = 'robius sani'
print(len(name))  # এটি 11 দেখাবে, কারণ 'robius sani' তে 11টি ক্যারেক্টার আছে
print(type(name))

# name[4] স্ট্রিং এর পঞ্চম ক্যারেক্টার দেখাবে
print(name[4])  # এটি 'u' দেখাবে, কারণ এটি 'robius sani' এর 5 নম্বর ক্যারেক্টার

# name[-1] স্ট্রিং এর শেষ ক্যারেক্টার দেখাবে
print(name[-1])  # এটি 'i' দেখাবে, কারণ এটি শেষ ক্যারেক্টার

# name[0:5] স্ট্রিং এর প্রথম থেকে চতুর্থ ক্যারেক্টার পর্যন্ত দেখাবে
print(name[0:5])  # এটি 'robiu' দেখাবে, কারণ এটি প্রথম 5টি ক্যারেক্টার

# ----------- স্ট্রিং ফাংশন -------------

# name.upper() স্ট্রিং এর সব ক্যারেক্টারকে uppercase এ পরিবর্তন করবে
print(name.upper())  # এটি 'ROBIUS SANI' দেখাবে

# name.lower() স্ট্রিং এর সব ক্যারেক্টারকে lowercase এ পরিবর্তন করবে
print(name.lower())  # এটি 'robius sani' দেখাবে

# name.title() প্রতিটি শব্দের প্রথম অক্ষরকে uppercase এ পরিবর্তন করবে
print(name.title())  # এটি 'Robius Sani' দেখাবে

# name.strip() স্ট্রিং এর শুরু এবং শেষে থাকা অতিরিক্ত স্পেসগুলো সরিয়ে দেবে
print(name.strip())  # যদি স্ট্রিং এর আগে বা পরে স্পেস থাকে, তাহলে সেটি সরিয়ে 'robius sani' দেখাবে

# name.lstrip() স্ট্রিং এর বাম দিকের অতিরিক্ত স্পেস সরিয়ে দেবে
print(name.lstrip())  # বাম দিকের স্পেস সরিয়ে 'robius sani' দেখাবে

# name.rstrip() স্ট্রিং এর ডান দিকের অতিরিক্ত স্পেস সরিয়ে দেবে
print(name.rstrip())  # ডান দিকের স্পেস সরিয়ে 'robius sani' দেখাবে

# name.find("us") স্ট্রিং এর মধ্যে "us" এর অবস্থান (ইনডেক্স) দেখাবে; যদি না পাওয়া যায়, তাহলে -1 দেখাবে
print(name.find("us"))  # এটি 4 দেখাবে, কারণ "us" শুরু হয়েছে 5 নম্বর ক্যারেক্টার থেকে

# name.replace("us", "dgdfsdf") স্ট্রিং এর "us" কে "dgdfsdf" দিয়ে প্রতিস্থাপন করবে
print(name.replace("us", "dgdfsdf"))  # এটি 'robidgdfsdf sani' দেখাবে

# "sani" in name চেক করবে যে "sani" স্ট্রিং এর মধ্যে আছে কিনা; এটি True বা False দেখাবে
print("sani" in name)  # এটি True দেখাবে, কারণ "sani" স্ট্রিং এর মধ্যে আছে



# --------------- all metch function ----------------------- 
import math

# round() ফাংশন 2.6 কে কাছাকাছি পূর্ণসংখ্যা 3 এ রাউন্ড করবে
print(round(2.6))  # এটি 3 দেখাবে

# round() ফাংশন 2.4 কে কাছাকাছি পূর্ণসংখ্যা 2 এ রাউন্ড করবে
print(round(2.4))  # এটি 2 দেখাবে

# abs() ফাংশন -2.4 এর ধনাত্মক মান 2.4 দেখাবে
print(abs(-2.4))  # এটি 2.4 দেখাবে

# ceil() ফাংশন 2.4 এর পরবর্তী পূর্ণসংখ্যা 3 দেখাবে
print(math.ceil(2.4))  # এটি 3 দেখাবে

# floor() ফাংশন 2.4 এর আগের পূর্ণসংখ্যা 2 দেখাবে
print(math.floor(2.4))  # এটি 2 দেখাবে

# comb() ফাংশনটি দুটি পূর্ণসংখ্যার জন্য হয়, যেমন 5 থেকে 2 সংখ্যার সমাবেশের সংখ্যা
print(math.comb(5, 2))  # এটি 10 দেখাবে

# copysign() ফাংশন 2.4 এর মানকে -1 এর চিহ্নে পরিবর্তন করবে
print(math.copysign(2.4, -1))  # এটি -2.4 দেখাবে

# fabs() ফাংশন abs() এর মত কাজ করে এবং 2.4 এর ধনাত্মক মান দেখাবে
print(math.fabs(2.4))  # এটি 2.4 দেখাবে

# factorial() শুধুমাত্র পূর্ণসংখ্যার জন্য কাজ করে, তাই 5 এর ফ্যাক্টোরিয়াল দেখাচ্ছে
print(math.factorial(5))  # এটি 120 দেখাবে

# fmod() ফাংশন 7.5 কে 2 দিয়ে ভাগ করে বাকি মান দেখাবে
print(math.fmod(7.5, 2))  # এটি 1.5 দেখাবে

# frexp() ফাংশন 8 এর স্বাক্ষর এবং এক্সপোনেন্টের মান দেখাবে (8 = 0.5 * 2^4)
print(math.frexp(8))  # এটি (0.5, 4) দেখাবে

# fsum() ফাংশন একটি iterable এর সকল উপাদানের যোগফল দেখাবে
print(math.fsum([2.4, 3.6]))  # এটি 6.0 দেখাবে

# gcd() ফাংশন দুটি পূর্ণসংখ্যার গুণিতক বের করবে
print(math.gcd(8, 12))  # এটি 4 দেখাবে

# isclose() ফাংশন দুটি মান কাছাকাছি কিনা তা যাচাই করে
print(math.isclose(2.4, 2.4000001))  # এটি True দেখাবে

# isfinite() ফাংশন চেক করবে যে কোনো সংখ্যা finite কিনা
print(math.isfinite(2.4))  # এটি True দেখাবে

# isinf() ফাংশন চেক করবে যে কোনো সংখ্যা infinite কিনা
print(math.isinf(2.4))  # এটি False দেখাবে

# isnan() ফাংশন চেক করবে যে কোনো সংখ্যা NaN (Not a Number) কিনা
print(math.isnan(2.4))  # এটি False দেখাবে

# isqrt() ফাংশন 10 এর বর্গমূলের পূর্ণসংখ্যা অংশ দেখাবে
print(math.isqrt(10))  # এটি 3 দেখাবে

# lcm() ফাংশন 8 এবং 12 এর লঘিষ্ঠ গুণিতক দেখাবে
print(math.lcm(8, 12))  # এটি 24 দেখাবে

# ldexp() ফাংশন 2.4 * 2^3 দেখাবে
print(math.ldexp(2.4, 3))  # এটি 19.2 দেখাবে

# modf() ফাংশন ভগ্নাংশ ও পূর্ণসংখ্যা ভাগ করে দেখাবে
print(math.modf(2.4))  # এটি (0.4, 2.0) দেখাবে

# nextafter() ফাংশন 2.4 থেকে 3.0 এর দিকে এক ধাপ ছোট সংখ্যা দেখাবে
print(math.nextafter(2.4, 3.0))  # এটি 2.4000000000000004 দেখাবে

# perm() ফাংশন পূর্ণসংখ্যা দিয়ে কাজ করে, যেমন 5 থেকে 3 সংখ্যার permutation
print(math.perm(5, 3))  # এটি 60 দেখাবে

# prod() ফাংশন একটি iterable এর সব উপাদানের গুণফল দেখাবে
print(math.prod([2, 3, 4]))  # এটি 24 দেখাবে

# remainder() ফাংশন 7.5 কে 2 দিয়ে ভাগ করলে বাকি মান দেখাবে
print(math.remainder(7.5, 2))  # এটি 1.5 দেখাবে

# trunc() ফাংশন 2.4 এর পূর্ণসংখ্যা অংশ দেখাবে
print(math.trunc(2.4))  # এটি 2 দেখাবে

# ulp() ফাংশন 2.4 এর ULP (Unit in the Last Place) দেখাবে
print(math.ulp(2.4))  # এটি 4.440892098500626e-16 দেখাবে

# cbrt() ফাংশন 8 এর ঘনমূল দেখাবে
print(math.cbrt(8))  # এটি 2.0 দেখাবে

# exp() ফাংশন e^2.4 এর মান দেখাবে
print(math.exp(2.4))  # এটি 11.023176380641601 দেখাবে

# exp2() ফাংশন 2^2.4 এর মান দেখাবে
print(math.exp2(2.4))  # এটি 5.278031643091577 দেখাবে

# expm1() ফাংশন e^2.4 - 1 এর মান দেখাবে
print(math.expm1(2.4))  # এটি 10.023176380641601 দেখাবে

# log() ফাংশন 2.4 এর প্রাকৃতিক লগারিদম দেখাবে
print(math.log(2.4))  # এটি 0.8754687373539 দেখাবে

# log1p() ফাংশন log(1 + 2.4) এর মান দেখাবে
print(math.log1p(2.4))  # এটি 1.2237754316221157 দেখাবে

# log2() ফাংশন 2.4 এর base 2 logarithm দেখাবে
print(math.log2(2.4))  # এটি 1.2630344058337937 দেখাবে

# log10() ফাংশন 2.4 এর base 10 logarithm দেখাবে
print(math.log10(2.4))  # এটি 0.38021124171160603 দেখাবে

# pow() ফাংশন 2.4^3 এর মান দেখাবে
print(math.pow(2.4, 3))  # এটি 13.824 দেখাবে

# sqrt() ফাংশন 2.4 এর বর্গমূল দেখাবে
print(math.sqrt(2.4))  # এটি 1.5491933384829668 দেখাবে

# acos() ফাংশন -1 থেকে 1 এর মধ্যে কোনো মানের arc cosine দেখাবে, কিন্তু 2.4 এর জন্য ত্রুটি দেখাবে
# print(math.acos(2.4))  # এটি ত্রুটি দেখাবে

# asin() ফাংশন -1 থেকে 1 এর মধ্যে কোনো মানের arc sine দেখাবে, কিন্তু 2.4 এর জন্য ত্রুটি দেখাবে
# print(math.asin(2.4))  # এটি ত্রুটি দেখাবে

# atan2() ফাংশন 2.4 এবং 1 এর মধ্যে কোণ (radians) দেখাবে
print(math.atan2(2.4, 1))  # এটি 1.1659045405098132 দেখাবে

# cos() ফাংশন 2.4 রেডিয়ান এর cosine দেখাবে
print(math.cos(2.4))  # এটি -0.7373937155412454 দেখাবে

# dist() ফাংশন দুটি বিন্দুর মধ্যে দূরত্ব দেখাবে, এখানে (1, 2) এবং (4, 6)
print(math.dist([1, 2], [4, 6]))  # এটি 5.0 দেখাবে

# hypot() ফাংশন 3 এবং 4 এর hypotenuse (right triangle) দেখাবে
print(math.hypot(3, 4))  # এটি 5.0 দেখাবে

# sin() ফাংশন 2.4 রেডিয়ান এর sine দেখাবে
print(math.sin(2.4))  # এটি 0.675463180551151 দেখাবে

# tan() ফাংশন 2.4 রেডিয়ান এর tangent দেখাবে
print(math.tan(2.4))  # এটি -0.9176097333938573 দেখাবে

# degrees() ফাংশন 2.4 রেডিয়ানকে ডিগ্রিতে রূপান্তর করবে
print(math.degrees(2.4))  # এটি 137.50776405003786 দেখাবে

# radians() ফাংশন 2.4 ডিগ্রিকে রেডিয়ানে রূপান্তর করবে
print(math.radians(2.4))  # এটি 0.041887902047863905 দেখাবে

# gamma() ফাংশন 5 এর গামা মান দেখাবে
print(math.gamma(5))  # এটি 24.0 দেখাবে

# lgamma() ফাংশন 5 এর গামা মানের লগারিদম দেখাবে
print(math.lgamma(5))  # এটি 3.1780538303479458 দেখাবে
